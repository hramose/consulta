{"version":3,"sources":["patients.js"],"names":[],"mappingsfile":"patients.min.js","sourcesContent":["$(function () {\r\n      var miniCalendar = $('#miniCalendar');\r\n      var ulSchedules = $('#schedule-list');\r\n      var isMobile = {\r\n        Android: function() {\r\n            return navigator.userAgent.match(/Android/i);\r\n        },\r\n        BlackBerry: function() {\r\n            return navigator.userAgent.match(/BlackBerry/i);\r\n        },\r\n        iOS: function() {\r\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n        },\r\n        Opera: function() {\r\n            return navigator.userAgent.match(/Opera Mini/i);\r\n        },\r\n        Windows: function() {\r\n            return navigator.userAgent.match(/IEMobile/i);\r\n        },\r\n        any: function() {\r\n            return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n        }\r\n    };\r\n\r\n  if( isMobile.any() ) {\r\n      $('.box-create-appointment').hide();\r\n       $('.breadcrumb').hide();\r\n       \r\n    }else{\r\n      //$('.box-create-appointment').show();\r\n      $('.box-search-filters').removeClass('collapsed-box');\r\n    }\r\n\r\n    $(\"form[data-confirm]\").submit(function() {\r\n      if ( ! confirm($(this).attr(\"data-confirm\"))) {\r\n          return false;\r\n      }\r\n  });\r\n\r\n\r\n   $(\".dropdown-toggle\").dropdown();\r\n\r\n    var slotDuration = $('#initAppointment').find('.modal-body').attr('data-slotDuration');\r\n    var eventDurationNumber = moment.duration(slotDuration).asMinutes(); //(slotDuration.split(':')[1] == \"00\" ? slotDuration.split(':')[0] : slotDuration.split(':')[1]);\r\n    var eventDurationMinHours = 'minutes'; //(slotDuration.split(':')[1] == \"00\" ? 'hours' : 'minutes');\r\n    var stepping = moment.duration(slotDuration).asMinutes();//(slotDuration.split(':')[1] == \"00\" ? slotDuration.split(':')[0] : slotDuration.split(':')[1]);\r\n          \r\n          // if(stepping == '01')\r\n          // {\r\n          //   stepping = '60';\r\n          // }   \r\n    \r\n    $('#datetimepicker1').datetimepicker({\r\n            format:'YYYY-MM-DD',\r\n            locale: 'es',\r\n            defaultDate: new Date()\r\n\r\n            \r\n         });\r\n              $('#datetimepicker2').datetimepicker({\r\n                          format: 'HH:mm',\r\n                          stepping: stepping,\r\n                          defaultDate: new Date()\r\n                          //useCurrent: false\r\n                          \r\n                      });\r\n             $('#datetimepicker3').datetimepicker({\r\n                  format: 'HH:mm',\r\n                  stepping: stepping,\r\n                  useCurrent: false//Important! See issue #1075\r\n              });\r\n\r\n     $('#initAppointment').on('shown.bs.modal', function (event) {\r\n          //debugger\r\n          var button = $(event.relatedTarget)\r\n          var patient_id = button.attr('data-patient');\r\n          var patient = button.attr('data-patientname');\r\n        \r\n         \r\n          $(this).find('.modal-body').find('#patient-name').text(patient);\r\n          $(this).find('.modal-body').attr('data-modalpatient',patient_id);\r\n          \r\n          miniCalendar.fullCalendar('render');\r\n     \r\n       \r\n      });\r\n\r\n      /** load events from db **/\r\n      var appointmentsFromCalendar = [];\r\n      //fetch_events();\r\n     /* function fetch_events() {\r\n\r\n        $.ajax({\r\n            type: 'GET',\r\n            url: '/medic/appointments/list?calendar=1&date1='+moment().format('YYYY-MM-DD')+'&date2='+moment().add(3,'months').format('YYYY-MM-DD'),\r\n            data: {},\r\n            success: function (resp) {\r\n                console.log(resp);\r\n\r\n                appointmentsFromCalendar = [];\r\n\r\n                $.each(resp, function( index, item ) {\r\n                   \r\n                    item.allDay = parseInt(item.allDay); // = false;\r\n                    \r\n\r\n                    appointmentsFromCalendar.push(item);\r\n                });\r\n               \r\n               \r\n                \r\n            },\r\n            error: function () {\r\n                console.log('Error - '+ resp);\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }*/\r\n\r\n      function isOverlapping(event) {\r\n     \r\n        var array = appointmentsFromCalendar;\r\n        \r\n          for(i in array){\r\n              \r\n                if (event.end > array[i].start && event.start < array[i].end){\r\n                   return true;\r\n                }\r\n             \r\n          }\r\n          return false;\r\n    }\r\n\r\n    $(\".search-offices\").select2({\r\n            placeholder: \"Selecciona el Consultorio donde quiere iniciar la consulta\",\r\n            //tags: true,\r\n            /* minimumInputLength: 1,*/\r\n             /*createTag: function (params) {\r\n              return {\r\n                id: params.term,\r\n                text: params.term,\r\n                newOption: true\r\n              }\r\n            },*/\r\n            /*templateResult: function (data) {\r\n              var $result = $(\"<span></span>\");\r\n\r\n              $result.text(data.text);\r\n\r\n              if (data.newOption) {\r\n                $result.css(\"color\",'red');\r\n              }\r\n\r\n              return $result;\r\n            },*/\r\n            ajax: {\r\n              url: \"/medic/account/offices/list\",\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params) {\r\n                return {\r\n                  q: params.term // search term\r\n                  \r\n                };\r\n              },\r\n              processResults: function (data) {\r\n               \r\n                \r\n               $(\".search-offices\").empty();\r\n                var items = []\r\n                \r\n                $.each(data, function (index, value) {\r\n\r\n                    item = {\r\n                      id: value.id,\r\n                      text: value.name,\r\n                      office_info: JSON.stringify(value)\r\n                     \r\n                    }\r\n                    items.push(item);\r\n                })\r\n\r\n                /*var nodisponible = {\r\n                      id: 'No disponible',\r\n                      text: 'No disponible',\r\n                      office_info: '',\r\n                      newOption: true\r\n                    };\r\n\r\n                items.push(nodisponible);*/\r\n                    \r\n                return {\r\n                  results: items,\r\n                  \r\n                };\r\n              }\r\n             \r\n            },\r\n            templateSelection: function(container) {\r\n                  $(container.element).attr(\"data-office\", container.office_info);\r\n                  \r\n                  return container.text;\r\n              }\r\n     });\r\n\r\n\r\n     $(\"#initAppointment\").find('.add-cita').on('click', function (e) {\r\n        e.preventDefault();\r\n        \r\n        var modal = $(\"#initAppointment\");\r\n        var patient_id = modal.find('.modal-body').attr('data-modalpatient');\r\n        var office_id = modal.find('input[name=\"office_id\"]').val();//modal.find('#search-offices').val();\r\n        var date = modal.find('input[name=\"date\"]').val();\r\n        var start = modal.find('input[name=\"start\"]').val();\r\n        var end = modal.find('input[name=\"end\"]').val();\r\n       \r\n        //var start = date + 'T'+ ini + ':00';\r\n       // var end = date + 'T'+ ((fin) ? fin : ini) + ':00';\r\n      \r\n       if(!office_id)\r\n       {\r\n       \r\n         $(\"#initAppointment\").find('#search-offices').select2('focus');\r\n         $(\"#initAppointment\").find('#search-offices').select2('open');\r\n\r\n         $('#infoBox').addClass('alert-danger').html('Selecciona un consultorio dentro del calendario. Por favor revisar!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n          return false;\r\n       }\r\n\r\n        if(!date || !start )\r\n        {\r\n          $('#infoBox').addClass('alert-danger').html('Fecha invalida. Por favor revisar!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n             return false;\r\n        }\r\n       \r\n        if(moment(start).isAfter(end))\r\n        {\r\n           $('#infoBox').addClass('alert-danger').html('Fecha invalida. La hora de inicio no puede ser mayor que la hora final!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n             return false;\r\n        }\r\n        var currentDate = new Date();\r\n\r\n        if(moment(date).isBefore(currentDate)) {\r\n          \r\n          \r\n          $('#infoBox').addClass('alert-danger').html('Hora no permitida!. No puedes selecionar horas pasadas o fuera del horario de atención').show();\r\n              setTimeout(function()\r\n                { \r\n                  $('#infoBox').removeClass('alert-danger').html('').hide();\r\n                },3000);\r\n\r\n          return false;\r\n      }\r\n\r\n      \r\n\r\n         if(moment(start).isSame(end))\r\n        {\r\n          end = moment(start).add(eventDurationNumber, eventDurationMinHours).stripZone().format();\r\n        }\r\n\r\n       var appointment = {\r\n        title : 'Cita',\r\n        date :  date,\r\n        start : start,\r\n        end : end,\r\n        backgroundColor:  '#3c8dbc', //Success (green)\r\n        borderColor: '#3c8dbc',\r\n        patient_id: patient_id,\r\n        office_id: office_id,\r\n        office_info: '',\r\n        allDay: 0\r\n        \r\n      };\r\n     \r\n      if(isOverlapping(appointment)){\r\n         $('#infoBox').addClass('alert-danger').html('No se puede iniciar esta cita por que ya hay una cita en el mismo horario. Por favor revisa tus citas programadas !!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-danger').hide();\r\n                        },3000);\r\n        return false;\r\n      }\r\n\r\n      $.ajax({\r\n            type: 'POST',\r\n            url: '/medic/appointments',\r\n            data: appointment,\r\n            success: function (resp) {\r\n\r\n                  resp.allDay = parseInt(resp.allDay);\r\n                  \r\n                  $(\"#initAppointment\").find('.add-cita').attr('disabled','disabled');\r\n                  $(\"#initAppointment\").find('.btn-cancel').attr('disabled','disabled');\r\n                  $('#infoBox').addClass('alert-success').html('Cita Creada Correctamente!!. Iniciando su cita, espere un momento').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-success').hide();\r\n                            modal.find('#patient-name').text('');\r\n                            modal.find('.modal-body').attr('data-modalpatient', '');\r\n                            //modal.find('#datetimepicker1').data(\"DateTimePicker\").clear();\r\n                           // modal.find('#datetimepicker2').data(\"DateTimePicker\").clear();\r\n                           // modal.find('#datetimepicker3').data(\"DateTimePicker\").clear();\r\n\r\n                            modal.modal('hide');\r\n                            $(\"#initAppointment\").find('.add-cita').removeAttr('disabled');\r\n                            $(\"#initAppointment\").find('.btn-cancel').removeAttr('disabled');\r\n                           window.location.href = \"/medic/appointments/\" + resp.id + \"/edit\";\r\n                        },3000);\r\n\r\n                  \r\n                  \r\n\r\n              \r\n                \r\n            },\r\n            error: function () {\r\n              console.log('error saving appointment');\r\n\r\n            }\r\n        });\r\n\r\n     \r\n\r\n      \r\n\r\n\r\n    });\r\n\r\n    \r\n    initMiniCalendar([]);\r\n    function initMiniCalendar(appointments)\r\n    {\r\n\r\n    \r\n      miniCalendar.fullCalendar({\r\n          locale: 'es',\r\n          defaultView: 'month',\r\n          timeFormat: 'h(:mm)a',\r\n          header: {\r\n            left: 'prev,next ',\r\n            center: 'title',\r\n            right: ''\r\n          },\r\n          //Random default events\r\n          events: appointments,\r\n          timezone: 'local',\r\n          allDaySlot: false,\r\n        \r\n          eventRender: function(event, element) {\r\n            \r\n    \r\n\r\n            //element.append( \"<span class='closeon fa fa-trash'></span>\" );\r\n            var office_id = (event.office) ? event.office.id : '';\r\n            var office_name = (event.office) ? event.office.name : '';\r\n\r\n      \r\n            var textTooltip = office_name +' De: ' + event.start.format(\"HH:mm\") + ' a: ' + event.end.format(\"HH:mm\");\r\n\r\n      \r\n\r\n            element.append( '<span class=\"appointment-details tooltip\" data-office=\"'+ office_id +'\" data-officename=\"'+ office_name +'\" data-toggle=\"tooltip\" title=\"'+ textTooltip +'\"></span>');\r\n\r\n          \r\n            if (event.rendering == 'background') {\r\n                element.append('<span class=\"title-bg-event\" data-title=\"'+ event.title + '\">'+ event.title + '</span>');\r\n              \r\n               \r\n            }\r\n\r\n\r\n             //element.append('<div data-createdby=\"'+ event.created_by +'\"></div>');\r\n\r\n               \r\n               \r\n                element.find(\".appointment-details\").click(function() {\r\n\r\n                      //calendar.fullCalendar('gotoDate', event.date);\r\n                      ulSchedules.empty();\r\n                      $('.schedule-clinic').text(office_name);\r\n                       schedule = event;\r\n                    \r\n                        var intervals = createIntervalsFromHours(moment(schedule.start).format(\"YYYY-MM-DD\"), moment(schedule.start).format(\"HH:mm\"), moment(schedule.end).format(\"HH:mm\"), eventDurationNumber);\r\n                        debugger\r\n                        \r\n                        var events = [];\r\n                        var title = 'Disponible';\r\n                        var startEvent;\r\n                        var endEvent;\r\n                        var reserved;\r\n                        var appointmentId;\r\n                        var reservedType;\r\n                        for (var i = 0; i < intervals.length - 1; i++) {\r\n            \r\n                          startEvent = moment(schedule.start).format(\"YYYY-MM-DD\") + 'T' + intervals[i] + ':00';\r\n                          endEvent = moment(schedule.start).format(\"YYYY-MM-DD\") + 'T' + intervals[i + 1] + ':00';\r\n                          reservedType = isReserved(startEvent, endEvent);\r\n                          if (reservedType.res) {\r\n                            if (reservedType.res == 1) {\r\n                              title = 'No Disponible';\r\n                              reserved = 1;\r\n                            }\r\n                            else {\r\n                              title = 'Reservado';\r\n                              reserved = 2;\r\n                              appointmentId = reservedType.id\r\n                            }\r\n            \r\n                          } else {\r\n                            title = 'Disponible';\r\n                            reserved = 0;\r\n                          }\r\n            \r\n                          var startTime = intervals[i] + ':00';\r\n                          var endTime = intervals[i + 1] + ':00';\r\n                         // if(!reserved)\r\n                            // ulSchedules.append('<div class=\"form-group\"><div class=\"radio\"><label><input type=\"radio\" name=\"schedule\" data-date=\"'+ moment(schedule.start).format(\"YYYY-MM-DD\")+'\" data-office=\"'+ schedule.office_id +'\" data-start=\"'+ startEvent +'\" data-end=\"'+ endEvent +'\"/> '+startTime + ' - '+ endTime +'</label></div></div>')\r\n\r\n                           \r\n                        \r\n                            if(!reserved)\r\n                              ulSchedules.append('<option value=\"'+ schedule.office_id +'\" data-date=\"'+ moment(schedule.start).format(\"YYYY-MM-DD\")+'\" data-office=\"'+ schedule.office_id +'\" data-start=\"'+ startEvent +'\" data-end=\"'+ endEvent +'\"> '+startTime + ' - '+ endTime +'</option>');\r\n            \r\n                        }\r\n\r\n                        ulSchedules.prepend('<option value=\"\" selected><span style=\"color:red;\">--</span></option>');\r\n\r\n                       /* if(!ulSchedules.children('div.form-group').length)\r\n                          ulSchedules.html('<p>No hay horarios disponibles</p>');*/\r\n            \r\n                       \r\n                    \r\n                    \r\n                             \r\n                   \r\n                });\r\n\r\n              \r\n            \r\n            \r\n\r\n        },\r\n      \r\n        dayClick: function(date, jsEvent, view) {\r\n          \r\n              \r\n             \r\n           \r\n          },\r\n          viewRender: function(view){\r\n              console.log(view.start.format() +' - '+view.end.format())\r\n            \r\n              miniCalendar.fullCalendar( 'removeEventSources');\r\n\r\n                $.ajax({\r\n                  type: 'GET',\r\n                  url: '/medic/appointments/list?calendar=1&date1='+view.start.format()+'&date2='+ view.end.format(),\r\n                  data: {},\r\n                  success: function (resp) {\r\n\r\n                    appointmentsFromCalendar = [];\r\n\r\n                      $.each(resp, function( index, item ) {\r\n                        \r\n                          item.allDay = parseInt(item.allDay); // = false;\r\n                          \r\n                          if(item.patient_id == 0) item.rendering = 'background';\r\n\r\n                          appointmentsFromCalendar.push(item);\r\n                      });\r\n                    \r\n                    \r\n                      \r\n                  },\r\n                  error: function (resp) {\r\n                      console.log('Error - '+ resp);\r\n\r\n                  }\r\n              \r\n              }); //ajax appoitnments\r\n          \r\n                  $.ajax({\r\n                      type: 'GET',\r\n                      url: '/medic/schedules/list?date1='+view.start.format()+'&date2='+ view.end.format(),\r\n                      data: {},\r\n                      success: function (resp) {\r\n                         \r\n\r\n                          var schedules = [];\r\n\r\n                          $.each(resp, function( index, item ) {\r\n                             \r\n                              item.allDay = parseInt(item.allDay); // = false;\r\n                              \r\n                              /*if(item.patient_id == 0) item.rendering = 'background';*/\r\n                          \r\n                              schedules.push(item);\r\n                          });\r\n\r\n                         \r\n                          miniCalendar.fullCalendar('addEventSource', schedules);\r\n                          //calendar.fullCalendar( 'updateEvents', schedules )\r\n                      },\r\n                      error: function (resp) {\r\n                          console.log('Error - '+ resp);\r\n\r\n                      }\r\n                  }); //ajax schedules\r\n\r\n              \r\n\r\n\r\n\r\n         \r\n            \r\n\r\n           \r\n            \r\n          } //view render\r\n        \r\n      });\r\n\r\n    } // init mini calendar\r\n\r\n    function createIntervalsFromHours(date, from, until, slot) {\r\n      \r\n          until = Date.parse(date + \" \" + until);\r\n          from = Date.parse(date + \" \" + from);\r\n      \r\n          var intervalLength = (slot) ? slot : 30;\r\n          var intervalsPerHour = 60 / intervalLength;\r\n          var milisecsPerHour = 60 * 60 * 1000;\r\n      \r\n          var max = (Math.abs(until - from) / milisecsPerHour) * intervalsPerHour;\r\n      \r\n          var time = new Date(from);\r\n          var intervals = [];\r\n          for (var i = 0; i <= max; i++) {\r\n            //doubleZeros just adds a zero in front of the value if it's smaller than 10.\r\n            var hour = doubleZeros(time.getHours());\r\n            var minute = doubleZeros(time.getMinutes());\r\n            intervals.push(hour + \":\" + minute);\r\n            time.setMinutes(time.getMinutes() + intervalLength);\r\n          }\r\n          return intervals;\r\n        }\r\n\r\n        function doubleZeros(item) {\r\n          \r\n              return (item < 10) ? '0' + item : item;\r\n            }\r\n        \r\n        function isReserved(startSchedule, endSchedule) {\r\n              var res = {\r\n                 res: 0,\r\n                 id: 0\r\n              };\r\n          \r\n              for (var j = 0; j < appointmentsFromCalendar.length; j++) {\r\n          \r\n                if (appointmentsFromCalendar[j].end > startSchedule && appointmentsFromCalendar[j].start < endSchedule) {\r\n          \r\n                  \r\n                    res.res = 1\r\n                    res.id = appointmentsFromCalendar[j].id\r\n                  \r\n                }\r\n          \r\n              }\r\n          \r\n              return res\r\n          \r\n            }\r\n          \r\n\r\n /*$('body').on('click','input[name=\"schedule\"]', function(e){\r\n   \r\n   $('input[name=\"start\"]').val($(this).data('start'))\r\n   $('input[name=\"end\"]').val($(this).data('end'))\r\n   $('input[name=\"date\"]').val($(this).data('date'))\r\n   $('input[name=\"office_id\"]').val($(this).data('office'))\r\n });*/\r\n\r\n ulSchedules.change(function(){\r\n    var selected = $(this).find('option:selected');\r\n\r\n    $('input[name=\"start\"]').val(selected.data('start'))\r\n    $('input[name=\"end\"]').val(selected.data('end'))\r\n    $('input[name=\"date\"]').val(selected.data('date'))\r\n    $('input[name=\"office_id\"]').val(selected.data('office')) \r\n    \r\n  });\r\n\r\n});"]}