{"version":3,"sources":["clinic.patients.js"],"names":[],"mappingsfile":"clinic.patients.min.js","sourcesContent":["$(function () {\r\n\r\n      var isMobile = {\r\n        Android: function() {\r\n            return navigator.userAgent.match(/Android/i);\r\n        },\r\n        BlackBerry: function() {\r\n            return navigator.userAgent.match(/BlackBerry/i);\r\n        },\r\n        iOS: function() {\r\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n        },\r\n        Opera: function() {\r\n            return navigator.userAgent.match(/Opera Mini/i);\r\n        },\r\n        Windows: function() {\r\n            return navigator.userAgent.match(/IEMobile/i);\r\n        },\r\n        any: function() {\r\n            return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n        }\r\n    };\r\n\r\n  if( isMobile.any() ) {\r\n      $('.box-create-appointment').hide();\r\n       $('.breadcrumb').hide();\r\n       \r\n    }else{\r\n      //$('.box-create-appointment').show();\r\n      $('.box-search-filters').removeClass('collapsed-box');\r\n    }\r\n\r\n   $(\".dropdown-toggle\").dropdown();\r\n\r\n    var slotDuration = $('#initAppointment').find('.modal-body').attr('data-slotDuration');\r\n    var eventDurationNumber = (slotDuration.split(':')[1] == \"00\" ? slotDuration.split(':')[0] : slotDuration.split(':')[1]);\r\n    var eventDurationMinHours = (slotDuration.split(':')[1] == \"00\" ? 'hours' : 'minutes');\r\n    var stepping = (slotDuration.split(':')[1] == \"00\" ? slotDuration.split(':')[0] : slotDuration.split(':')[1]);\r\n          \r\n          if(stepping == '01')\r\n          {\r\n            stepping = '60';\r\n          }   \r\n    \r\n    $('#datetimepicker1').datetimepicker({\r\n            format:'YYYY-MM-DD',\r\n            locale: 'es',\r\n            defaultDate: new Date()\r\n\r\n            \r\n         });\r\n              $('#datetimepicker2').datetimepicker({\r\n                          format: 'HH:mm',\r\n                          stepping: stepping,\r\n                          defaultDate: new Date()\r\n                          //useCurrent: false\r\n                          \r\n                      });\r\n             $('#datetimepicker3').datetimepicker({\r\n                  format: 'HH:mm',\r\n                  stepping: stepping,\r\n                  useCurrent: false//Important! See issue #1075\r\n              });\r\n\r\n     $('#initAppointment').on('shown.bs.modal', function (event) {\r\n          //debugger\r\n          var button = $(event.relatedTarget)\r\n          var patient_id = button.attr('data-patient');\r\n          var patient = button.attr('data-patientname');\r\n        \r\n         \r\n          $(this).find('.modal-body').find('#patient-name').text(patient);\r\n          $(this).find('.modal-body').attr('data-modalpatient',patient_id);\r\n          \r\n        \r\n     \r\n       \r\n      });\r\n\r\n      /** load events from db **/\r\n      var appointmentsFromCalendar = [];\r\n      fetch_events();\r\n      function fetch_events() {\r\n\r\n        $.ajax({\r\n            type: 'GET',\r\n            url: '/clinic/appointments/list',\r\n            data: {},\r\n            success: function (resp) {\r\n                console.log(resp);\r\n\r\n                appointmentsFromCalendar = [];\r\n\r\n                $.each(resp, function( index, item ) {\r\n                   \r\n                    item.allDay = parseInt(item.allDay); // = false;\r\n                    \r\n\r\n                    appointmentsFromCalendar.push(item);\r\n                });\r\n               \r\n               \r\n                \r\n            },\r\n            error: function (resp) {\r\n                console.log('Error - '+ resp);\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n      function isOverlapping(event) {\r\n     \r\n        var array = appointmentsFromCalendar;\r\n        \r\n          for(i in array){\r\n              \r\n                if (event.end > array[i].start && event.start < array[i].end){\r\n                   return true;\r\n                }\r\n             \r\n          }\r\n          return false;\r\n    }\r\n\r\n    $(\".search-offices\").select2({\r\n            placeholder: \"Selecciona el Consultorio donde quiere iniciar la consulta\",\r\n            //tags: true,\r\n            /* minimumInputLength: 1,*/\r\n             /*createTag: function (params) {\r\n              return {\r\n                id: params.term,\r\n                text: params.term,\r\n                newOption: true\r\n              }\r\n            },*/\r\n            templateResult: function (data) {\r\n              var $result = $(\"<span></span>\");\r\n\r\n              $result.text(data.text);\r\n\r\n              if (data.newOption) {\r\n                $result.css(\"color\",'red');\r\n              }\r\n\r\n              return $result;\r\n            },\r\n            ajax: {\r\n              url: \"/clinic/account/offices/list\",\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params) {\r\n                return {\r\n                  q: params.term // search term\r\n                  \r\n                };\r\n              },\r\n              processResults: function (data) {\r\n               \r\n                \r\n               $(\".search-offices\").empty();\r\n                var items = []\r\n                \r\n                $.each(data, function (index, value) {\r\n\r\n                    item = {\r\n                      id: value.id,\r\n                      text: value.name,\r\n                      office_info: JSON.stringify(value)\r\n                     \r\n                    }\r\n                    items.push(item);\r\n                })\r\n\r\n                var nodisponible = {\r\n                      id: 'No disponible',\r\n                      text: 'No disponible',\r\n                      office_info: '',\r\n                      newOption: true\r\n                    };\r\n\r\n                items.push(nodisponible);\r\n                    \r\n                return {\r\n                  results: items,\r\n                  \r\n                };\r\n              }\r\n             \r\n            },\r\n            templateSelection: function(container) {\r\n                  $(container.element).attr(\"data-office\", container.office_info);\r\n                  \r\n                  return container.text;\r\n              }\r\n     });\r\n\r\n\r\n     $(\"#initAppointment\").find('.add-cita').on('click', function (e) {\r\n        e.preventDefault();\r\n        \r\n        var modal = $(\"#initAppointment\");\r\n        var patient_id = modal.find('.modal-body').attr('data-modalpatient');\r\n        var office_id = modal.find('#search-offices').val();\r\n        var date = modal.find('input[name=\"date\"]').val();\r\n        var ini = modal.find('input[name=\"start\"]').val();\r\n        var fin = modal.find('input[name=\"end\"]').val();\r\n       \r\n        var start = date + 'T'+ ini + ':00';\r\n        var end = date + 'T'+ ((fin) ? fin : ini) + ':00';\r\n      \r\n       if(!office_id)\r\n       {\r\n       \r\n         $(\"#initAppointment\").find('#search-offices').select2('focus');\r\n         $(\"#initAppointment\").find('#search-offices').select2('open');\r\n\r\n         $('#infoBox').addClass('alert-danger').html('Escribe un consultorio. Por favor revisar!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n          return false;\r\n       }\r\n\r\n        if(!date || !ini )\r\n        {\r\n          $('#infoBox').addClass('alert-danger').html('Fecha invalida. Por favor revisar!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n             return false;\r\n        }\r\n       \r\n        if(moment(start).isAfter(end))\r\n        {\r\n           $('#infoBox').addClass('alert-danger').html('Fecha invalida. La hora de inicio no puede ser mayor que la hora final!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n             return false;\r\n        }\r\n\r\n      \r\n\r\n         if(moment(start).isSame(end))\r\n        {\r\n          end = moment(start).add(eventDurationNumber, eventDurationMinHours).stripZone().format();\r\n        }\r\n\r\n       var appointment = {\r\n        title : 'Cita',\r\n        date :  date,\r\n        start : start,\r\n        end : end,\r\n        backgroundColor:  '#3c8dbc', //Success (green)\r\n        borderColor: '#3c8dbc',\r\n        patient_id: patient_id,\r\n        office_id: office_id,\r\n        office_info: '',\r\n        allDay: 0\r\n        \r\n      };\r\n     \r\n      if(isOverlapping(appointment)){\r\n         $('#infoBox').addClass('alert-danger').html('No se puede iniciar esta cita por que ya hay una cita en el mismo horario. Por favor revisa tus citas programadas !!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-danger').hide();\r\n                        },3000);\r\n        return false;\r\n      }\r\n\r\n      $.ajax({\r\n            type: 'POST',\r\n            url: '/clinic/appointments',\r\n            data: appointment,\r\n            success: function (resp) {\r\n\r\n                  resp.allDay = parseInt(resp.allDay);\r\n                  \r\n                  $(\"#initAppointment\").find('.add-cita').attr('disabled','disabled');\r\n                  $(\"#initAppointment\").find('.btn-cancel').attr('disabled','disabled');\r\n                  $('#infoBox').addClass('alert-success').html('Cita Creada Correctamente!!. Iniciando su cita, espere un momento').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          $('#infoBox').removeClass('alert-success').hide();\r\n                            modal.find('#patient-name').text('');\r\n                            modal.find('.modal-body').attr('data-modalpatient', '');\r\n                            modal.find('#datetimepicker1').data(\"DateTimePicker\").clear();\r\n                            modal.find('#datetimepicker2').data(\"DateTimePicker\").clear();\r\n                            modal.find('#datetimepicker3').data(\"DateTimePicker\").clear();\r\n\r\n                            modal.modal('hide');\r\n                            $(\"#initAppointment\").find('.add-cita').removeAttr('disabled');\r\n                            $(\"#initAppointment\").find('.btn-cancel').removeAttr('disabled');\r\n                           window.location.href = \"/medic/appointments/\" + resp.id + \"/edit\";\r\n                        },3000);\r\n\r\n                  \r\n                  \r\n\r\n              \r\n                \r\n            },\r\n            error: function () {\r\n              console.log('error saving appointment');\r\n\r\n            }\r\n        });\r\n\r\n     \r\n\r\n      \r\n\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n});"]}