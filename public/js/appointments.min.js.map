{"version":3,"sources":["appointments.js"],"names":[],"mappingsfile":"appointments.min.js","sourcesContent":["$(function () {\r\n\r\n     var minTime = '06:00:00';\r\n     var maxTime = '18:00:00';\r\n     var slotDuration = '00:30';\r\n     // var eventDurationNumber = (slotDuration.split(':')[1] == \"00\" ? slotDuration.split(':')[0] : slotDuration.split(':')[1]);\r\n     // var eventDurationMinHours = (slotDuration.split(':')[1] == \"00\" ? 'hours' : 'minutes');\r\n     var eventDurationNumber = moment.duration(slotDuration).asMinutes();//(slotDuration.split(':')[1] == \"00\" ? slotDuration.split(':')[0] : slotDuration.split(':')[1]);\r\n     var eventDurationMinHours = 'minutes'//(slotDuration.split(':')[1] == \"00\" ? 'hours' : 'minutes');\r\n     var freeDays = [];\r\n     var businessHours = [ 1, 2, 3, 4, 5, 6, 0];\r\n     var setupSchedule = $('#setupSchedule');\r\n     var slotDurationSchedule = setupSchedule.find('#selectSlotDurationModal').val();\r\n     var calendar = $('#calendar');\r\n     var prog_schedule = calendar.attr('data-schedule') ? calendar.attr('data-schedule') : '';\r\n     var infoBox = $(\"#infoBox\");\r\n     var modalForm = $('#myModal');\r\n     var currColor = \"#3c8dbc\";\r\n     var boxCreateAppointment = $(\".box-create-appointment\");\r\n     var searchPatients = $(\".search-patients\");\r\n     var searchModalPatients = $(\".modal-search-patients\");\r\n     var searchOffices = $(\".search-offices\");\r\n     var datetimepicker1 = $('#datetimepicker1');\r\n     var datetimepicker2 = $('#datetimepicker2');\r\n     var datetimepicker3 = $('#datetimepicker3');\r\n     var datetimepickerini1 = $('#datetimepickerini1');\r\n     var datetimepickerini2 = $('#datetimepickerini2');\r\n     var datetimepickerfin1 = $('#datetimepickerfin1');\r\n     var datetimepickerfin2 = $('#datetimepickerfin2');\r\n\r\n      var isMobile = {\r\n        Android: function() {\r\n            return navigator.userAgent.match(/Android/i);\r\n        },\r\n        BlackBerry: function() {\r\n            return navigator.userAgent.match(/BlackBerry/i);\r\n        },\r\n        iOS: function() {\r\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n        },\r\n        Opera: function() {\r\n            return navigator.userAgent.match(/Opera Mini/i);\r\n        },\r\n        Windows: function() {\r\n            return navigator.userAgent.match(/IEMobile/i);\r\n        },\r\n        any: function() {\r\n            return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n        }\r\n    };\r\n\r\n\r\n  if( isMobile.any() ) {\r\n      $('.box-create-appointment').hide();\r\n      $('.box-offices').hide();\r\n    }else{\r\n      //$('.box-create-appointment').show();\r\n    }\r\n\r\n\r\n    $(\".dropdown-toggle\").dropdown();\r\n\r\n    function dayNumber(date){\r\n      \r\n       return $.fullCalendar.moment(date).day();\r\n   }\r\n\r\n    if(slotDurationSchedule)\r\n    {\r\n          var stepping = moment.duration(slotDurationSchedule).asMinutes(); //(slotDurationSchedule.split(':')[1] == \"00\" ? slotDurationSchedule.split(':')[0] : slotDurationSchedule.split(':')[1]);\r\n         \r\n          /*if(stepping == '01')\r\n          {\r\n            stepping = '60';\r\n          } */  \r\n\r\n         datetimepicker1.datetimepicker({\r\n            format:'YYYY-MM-DD',\r\n            locale: 'es',\r\n            defaultDate: new Date()\r\n            \r\n         });\r\n\r\n          datetimepicker2.datetimepicker({\r\n                format: 'HH:mm',\r\n                stepping: stepping,\r\n                //useCurrent: false\r\n                \r\n            });\r\n\r\n       datetimepicker3.datetimepicker({\r\n            format: 'HH:mm',\r\n            stepping: stepping,\r\n            useCurrent: false//Important! See issue #1075\r\n        });\r\n              \r\n        setupSchedule.modal({backdrop:'static', show:true });\r\n  } // if drop\r\n\r\n   $('#selectSlotDuration').on('change',function (e) {\r\n        e.preventDefault();\r\n\r\n       onChangeSlotDurarion($(this).val());\r\n\r\n     });\r\n     $('#selectSlotDurationModal').on('change',function (e) {\r\n        e.preventDefault();\r\n  \r\n        onChangeSlotDurarion($(this).val());\r\n        resetTimePicker($(this).val());\r\n     });\r\n\r\n  function resetTimePicker(slotDuration) {\r\n        datetimepicker2.data(\"DateTimePicker\").clear();\r\n        datetimepicker3.data(\"DateTimePicker\").clear();\r\n        datetimepicker2.data(\"DateTimePicker\").destroy();\r\n        datetimepicker3.data(\"DateTimePicker\").destroy();\r\n\r\n  \r\n        var stepping = //(slotDuration.split(':')[1] == \"00\" ? slotDuration.split(':')[0] : slotDuration.split(':')[1]);\r\n       \r\n       /*if(stepping == '01')\r\n       {\r\n          stepping = '60';\r\n       }*/\r\n\r\n       datetimepicker2.datetimepicker({\r\n                    format: 'LT',\r\n                    stepping: stepping,\r\n                    //useCurrent: false\r\n                });\r\n       datetimepicker3.datetimepicker({\r\n            format: 'LT',\r\n            stepping: stepping,\r\n             useCurrent: false\r\n            \r\n        });\r\n      \r\n      \r\n     } //reset datepicker\r\n\r\n     function onChangeSlotDurarion(slotDuration) {\r\n       \r\n\r\n        eventDurationNumber = moment.duration(slotDuration).asMinutes();//(slotDuration.split(':')[1] == \"00\" ? slotDuration.split(':')[0] : slotDuration.split(':')[1]);\r\n        eventDurationMinHours = 'minutes';//(slotDuration.split(':')[1] == \"00\" ? 'hours' : 'minutes');\r\n\r\n        calendar.attr('data-slotduration', slotDuration);\r\n        calendar.fullCalendar('option','slotDuration', slotDuration);\r\n         \r\n         $.ajax({\r\n            type: 'PUT',\r\n            url: '/medic/account/settings',\r\n            data: { slotDuration: slotDuration },\r\n            success: function (resp) {\r\n              \r\n             console.log('slotDuration actualizado')\r\n             window.location.href = \"/medic/appointments/create?wizard=1\";\r\n             \r\n            },\r\n            error: function () {\r\n              console.log('error updating slotDuration');\r\n\r\n            }\r\n        });\r\n     } // onchange slotduration\r\n\r\n\r\n       datetimepickerini1.datetimepicker({\r\n            format:'YYYY-MM-DD',\r\n            locale: 'es',\r\n            defaultDate: new Date()\r\n            \r\n         });\r\n        datetimepickerini2.datetimepicker({\r\n            format:'YYYY-MM-DD',\r\n            locale: 'es',\r\n            defaultDate: new Date()\r\n            \r\n         });\r\n         datetimepickerfin1.datetimepicker({\r\n            format:'YYYY-MM-DD',\r\n            locale: 'es',\r\n            defaultDate: new Date()\r\n            \r\n         });\r\n          datetimepickerfin2.datetimepicker({\r\n            format:'YYYY-MM-DD',\r\n            locale: 'es',\r\n            defaultDate: new Date()\r\n            \r\n         });\r\n\r\n     function isOverlapping(event) {\r\n     \r\n        var array = calendar.fullCalendar('clientEvents');\r\n         \r\n          for(i in array){\r\n              if(event.idRemove != array[i]._id && !array[i].rendering)\r\n              {\r\n                if (event.end > array[i].start._i && event.start < array[i].end._i){\r\n                   return true;\r\n                }\r\n              }\r\n          }\r\n          return false;\r\n    }\r\n    \r\n\r\n\r\n  ini_events($('#external-events div.external-event'));\r\n\r\n  function ini_events(ele) {\r\n      ele.each(function () {\r\n\r\n        var eventObject = {\r\n          title: $.trim($(this).text()), // use the element's text as the event title\r\n          office_id: $(this).data('office'),\r\n          patient_id: $(this).data('patient'),\r\n          start: moment(),\r\n          end: moment(),\r\n          backgroundColor: $(this).css(\"background-color\"),\r\n          borderColor: $(this).css(\"border-color\")\r\n         \r\n          \r\n        };\r\n\r\n        // store the Event Object in the DOM element so we can get to it later\r\n        $(this).data('event', eventObject);\r\n       \r\n        // make the event draggable using jQuery UI\r\n        $(this).draggable({\r\n          zIndex: 1070,\r\n          revert: true, // will cause the event to go back to its\r\n          revertDuration: 0  //  original position after the drag\r\n        });\r\n       \r\n      });\r\n  \r\n  }\r\n\r\n        //se desabilito de aqui por que se va a obtener desde view render de fullcalendar\r\n   //  if(prog_schedule)  \r\n   //    fetch_schedules();\r\n   //  else\r\n   //    fetch_events();\r\n\r\n   // function fetch_schedules() {\r\n\r\n   //      $.ajax({\r\n   //          type: 'GET',\r\n   //          url: '/medic/schedules/list',\r\n   //          data: {},\r\n   //          success: function (resp) {\r\n               \r\n\r\n   //              var schedules = [];\r\n\r\n   //              $.each(resp, function( index, item ) {\r\n                   \r\n   //                  item.allDay = parseInt(item.allDay); // = false;\r\n                    \r\n   //                  /*if(item.patient_id == 0) item.rendering = 'background';*/\r\n                \r\n   //                  schedules.push(item);\r\n   //              });\r\n               \r\n   //              initCalendar(schedules);\r\n                \r\n   //          },\r\n   //          error: function (resp) {\r\n   //              console.log('Error - '+ resp);\r\n\r\n   //          }\r\n   //      });\r\n\r\n\r\n   //  } // fetch schedules\r\n\r\n   //  function fetch_events() {\r\n\r\n   //      $.ajax({\r\n   //          type: 'GET',\r\n   //          url: '/medic/appointments/list',\r\n   //          data: {},\r\n   //          success: function (resp) {\r\n\r\n   //              var appointments = [];\r\n\r\n   //              $.each(resp, function( index, item ) {\r\n                   \r\n   //                  item.allDay = parseInt(item.allDay); // = false;\r\n                    \r\n   //                  if(item.patient_id == 0) item.rendering = 'background';\r\n\r\n   //                  appointments.push(item);\r\n   //              });\r\n               \r\n   //              initCalendar(appointments);\r\n                \r\n   //          },\r\n   //          error: function (resp) {\r\n   //              console.log('Error - '+ resp);\r\n\r\n   //          }\r\n   //      });\r\n\r\n\r\n   //  } // fetch appointments\r\n\r\n    \r\n    fetch_offices();\r\n\r\n    function fetch_offices() {\r\n\r\n        $.ajax({\r\n            type: 'GET',\r\n            url: '/medic/account/offices/list',\r\n            data: {},\r\n            success: function (resp) {\r\n               \r\n                var offices = [];\r\n                var colors = ['#00c0ef','#00a65a','#f39c12','#dd4b39','#A9D300']\r\n                //var currColor = colors[Math.floor((Math.random()*colors.length))];//\"#00a65a\";\r\n\r\n                $.each(resp, function( index, item ) {\r\n                    console.log(index)\r\n                    var currColor = colors[index];\r\n                    \r\n                    if(!currColor) currColor = '#00c0ef';\r\n                    \r\n                    offices.push(item);\r\n                    \r\n                    var event = $(\"<div />\");\r\n                    event.css({\"background-color\": currColor, \"border-color\": currColor, \"color\": \"#fff\"}).addClass(\"external-event\");\r\n                    event.attr('data-patient', 0);\r\n                    \r\n                    event.html('');\r\n                    event.html(item.name);\r\n\r\n                    $('#external-offices').prepend(event);\r\n                  \r\n                    var eventObject = {\r\n\r\n                      title: $.trim(item.name), // use the element's text as the event title\r\n                      office_id: item.id, //patient_id :0\r\n                      office_info: JSON.stringify(item),\r\n                      backgroundColor: event.css(\"background-color\"),\r\n                      borderColor: event.css(\"border-color\")\r\n                     \r\n                      \r\n                    };\r\n\r\n                    // store the Event Object in the DOM element so we can get to it later\r\n                    event.data('event', eventObject);\r\n                   \r\n                    // make the event draggable using jQuery UI\r\n                    event.draggable({\r\n                      zIndex: 1070,\r\n                      revert: true, // will cause the event to go back to its\r\n                      revertDuration: 0  //  original position after the drag\r\n                    });\r\n\r\n\r\n\r\n                });\r\n                  \r\n            },\r\n            error: function (resp) {\r\n                console.log('Error - '+ resp);\r\n\r\n            }\r\n        });\r\n\r\n\r\n    } // fetch offices\r\n    var loadedEvents = false;\r\n    initCalendar([]);\r\n\r\n    function initCalendar(appointments)\r\n    {\r\n\r\n       minTime = calendar.attr('data-minTime') ? calendar.attr('data-minTime') : '06:00:00';\r\n       maxTime = calendar.attr('data-maxTime') ? calendar.attr('data-maxTime') : '18:00:00';\r\n       slotDuration = $('#selectSlotDuration').val() ? $('#selectSlotDuration').val() : calendar.attr('data-slotDuration');\r\n       eventDurationNumber = moment.duration(slotDuration).asMinutes(); //(slotDuration.split(':')[1] == \"00\" ? slotDuration.split(':')[0] : slotDuration.split(':')[1]);\r\n       eventDurationMinHours = 'minutes'; //(slotDuration.split(':')[1] == \"00\" ? 'hours' : 'minutes');\r\n       freeDays = calendar.attr('data-freeDays') ? JSON.parse(calendar.attr('data-freeDays')) : [];\r\n       businessHours = [ 1, 2, 3, 4, 5, 6, 0];\r\n      \r\n      for(d in businessHours){\r\n         for(f in freeDays){\r\n                if(freeDays[f] == businessHours[d])\r\n                {\r\n                  var index = businessHours.indexOf(businessHours[d]);\r\n                   if (index > -1) {\r\n                      businessHours.splice(index, 1);\r\n                   }\r\n                 \r\n                }\r\n            }\r\n      }\r\n      \r\n      calendar.fullCalendar({\r\n          locale: 'es',\r\n          defaultView: 'agendaWeek',\r\n          timeFormat: 'h(:mm)a',\r\n          header: {\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'month,agendaWeek,agendaDay'\r\n          },\r\n          //Random default events\r\n          events: appointments,\r\n          forceEventDuration: true,\r\n          slotDuration:  slotDuration,\r\n          defaultTimedEventDuration: slotDuration,\r\n          editable: true,\r\n          droppable: true, // this allows things to be dropped onto the calendar !!!\r\n          eventOverlap: false,\r\n          businessHours: {\r\n             // days of week. an array of zero-based day of week integers (0=Sunday)\r\n              dow: businessHours,//[ 1, 2, 3, 4, 5, 6], // Monday - Thursday\r\n\r\n              start: minTime, // a start time (10am in this example)\r\n              end: maxTime, // an end time (6pm in this example)\r\n          },\r\n          eventConstraint:\"businessHours\",\r\n          minTime: minTime,\r\n          maxTime: maxTime,\r\n          scrollTime: minTime,\r\n          nowIndicator: true,\r\n          timezone: 'local',\r\n          allDaySlot: false,\r\n          select: function(start, end, jsEvent, view) {\r\n            \r\n            if (view.name === \"month\") {\r\n\r\n                calendar.fullCalendar('gotoDate', date);\r\n                calendar.fullCalendar('changeView', 'agendaWeek');\r\n\r\n                return false;\r\n            }\r\n            \r\n            var currentDate = new Date();\r\n             \r\n              \r\n              if(start < currentDate || $(jsEvent.target).hasClass(\"fc-nonbusiness\")) {\r\n                    \r\n                    infoBox.addClass('alert-danger').html('Hora no permitida!. No puedes selecionar horas pasadas o fuera del horario de atención').show();\r\n                      setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').html('').hide();\r\n                        },3000);\r\n\r\n                  calendar.fullCalendar('unselect');\r\n                  \r\n                  return false;\r\n              }\r\n\r\n\r\n                modalForm.modal({backdrop:'static', show:true });\r\n                modalForm.find('#modal-new-event').attr('data-modaldate', start.format());\r\n                modalForm.find('#modal-new-event').attr('data-modaldate-end', end.format());\r\n                modalForm.find('.modal-body').attr('data-modaldate', start.format());\r\n                modalForm.find('.modal-body').attr('data-modaldate-end', end.format());\r\n                modalForm.find('.modal-body').attr('data-date', start.format(\"dddd, MMMM Do YYYY\")).attr('data-hour', start.format(\"hh:mm a\" ));\r\n\r\n               \r\n                \r\n          },\r\n          drop: function (date, allDay) { // this function is called when something is dropped\r\n            \r\n             var currentDate = new Date();\r\n            \r\n            if(date < currentDate) {\r\n\r\n                  infoBox.addClass('alert-danger').html('Hora no permitida!. No puedes selecionar horas pasadas o fuera del horario de atención').show();\r\n                      setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').html('').hide();\r\n                        },3000);\r\n\r\n                   return false;\r\n              }\r\n            // retrieve the dropped element's stored Event Object\r\n            var originalEventObject = $(this).data('event');\r\n          \r\n            // we need to copy it, so that multiple events don't have a reference to the same object\r\n            var copiedEventObject = $.extend({}, originalEventObject);\r\n            \r\n            // assign it the date that was reported\r\n            copiedEventObject.start = date;\r\n           \r\n            \r\n            copiedEventObject.allDay = false;//allDay;\r\n            copiedEventObject.backgroundColor = $(this).css(\"background-color\");\r\n            copiedEventObject.borderColor = $(this).css(\"border-color\");\r\n            copiedEventObject.overlap = false;\r\n            \r\n           \r\n          },\r\n           eventReceive: function(event) {\r\n           \r\n             var currentDate = new Date();\r\n             if(event.start < currentDate) {\r\n                   \r\n                   calendar.fullCalendar( 'removeEvents', event._id)\r\n                   \r\n                   return false;\r\n              }\r\n\r\n            if(prog_schedule)\r\n              saveSchedule(event, event._id);\r\n            else\r\n              saveAppointment(event, event._id);\r\n            \r\n          },\r\n          eventResize: function(event, delta, revertFunc, jsEvent) {\r\n             \r\n              if(prog_schedule)\r\n                updateSchedule(event, revertFunc);\r\n              else\r\n                updateAppointment(event, revertFunc);\r\n          \r\n           \r\n          },\r\n          eventDrop: function(event, delta, revertFunc) {\r\n             \r\n             if(prog_schedule)\r\n                updateSchedule(event, revertFunc);\r\n              else\r\n                updateAppointment(event, revertFunc);\r\n              \r\n\r\n          },\r\n          eventRender: function(event, element) {\r\n            \r\n            if(element.hasClass(\"fc-nonbusiness\"))\r\n            {\r\n                infoBox.addClass('alert-danger').html('Hora no permitida!. No puedes selecionar horas pasadas o fuera del horario de atención').show();\r\n                      setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').html('').hide();\r\n                        },3000);\r\n\r\n                  return false;\r\n            }\r\n            \r\n\r\n            //element.append( \"<span class='closeon fa fa-trash'></span>\" );\r\n            var office_id = (event.office) ? event.office.id : '';\r\n            var office_name = (event.office) ? event.office.name : '';\r\n\r\n            element.append( '<span class=\"appointment-details\" data-office=\"'+ office_id +'\" data-officename=\"'+ office_name +'\"></span>');\r\n\r\n          \r\n            if (event.rendering == 'background') {\r\n                element.append('<span class=\"title-bg-event\" data-title=\"'+ event.title + '\">'+ event.title + '</span>');\r\n              \r\n               \r\n            }\r\n\r\n\r\n             element.append('<div data-createdby=\"'+ event.created_by +'\"></div>');\r\n\r\n            if(event.patient_id && event.patient)\r\n            {\r\n              var officeInfoDisplay = '';\r\n\r\n              if(event.office)\r\n                {\r\n                     var officeInfo = event.office;//JSON.parse(event.office_info);\r\n\r\n                      officeInfoDisplay = 'en la '+ officeInfo.type +' '+ officeInfo.name+ ' <br>Dirección: ' + officeInfo.address + ', ' + officeInfo.province +', Tel: <a href=\"tel:'+ officeInfo.phone +'\">'+ officeInfo.phone +'</a><br>'\r\n                      \r\n                   \r\n                }\r\n              element.find(\".appointment-details\").click(function() {\r\n\r\n                  swal({\r\n                    title: 'Cita con el Paciente '+ event.patient.first_name + ' '+ event.patient.last_name,\r\n                    html: 'Fecha: '+ event.start.format(\"YYYY-MM-DD\") +' De: ' + event.start.format(\"HH:mm\") + ' a: ' + event.end.format(\"HH:mm\") +' <br>'+ officeInfoDisplay,\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#d33',\r\n                    cancelButtonColor: '#3085d6',\r\n                    cancelButtonText: 'Ok',\r\n                    confirmButtonText: 'Eliminar cita'\r\n                  }).then(function () {\r\n                    \r\n                    // if(prog_schedule)\r\n                    //   deleteSchedule(event._id, event);\r\n                    // else\r\n                      var resp = deleteAppointment(event._id, event);\r\n                      \r\n                      if(resp){\r\n\r\n                        swal(\r\n                          'Cita cancelada!',\r\n                          'Tu cita ha sido eliminada del calendario.',\r\n                          'success'\r\n                        )\r\n                      }\r\n\r\n                  },function (dismiss) {});\r\n\r\n              });\r\n            \r\n            }else if(!event.schedule){\r\n        \r\n                var officeInfoDisplay = '';\r\n                var titleAlert = event.title;\r\n                var textAlert = 'Fecha: '+ event.start.format(\"YYYY-MM-DD\") +' De: ' + event.start.format(\"HH:mm\") + ' a: ' + event.end.format(\"HH:mm\") + officeInfoDisplay;\r\n\r\n                if(event.office)\r\n                {\r\n                     var officeInfo = event.office;//JSON.parse(event.office_info);\r\n\r\n                      officeInfoDisplay = '<br>Dirección: ' + officeInfo.address + ', ' + officeInfo.province +' <br>'\r\n                      \r\n                      titleAlert = 'Este horario está reservado para atención en la '+ officeInfo.type +' '+ officeInfo.name\r\n                      \r\n                      textAlert = 'Favor llamar a este número: '+ officeInfo.phone + ' <br> Fecha: '+ event.start.format(\"YYYY-MM-DD\") +' De: ' + event.start.format(\"HH:mm\") + ' a: ' + event.end.format(\"HH:mm\") + officeInfoDisplay\r\n                }\r\n               \r\n               \r\n                element.find(\".appointment-details\").click(function() {\r\n                   swal({\r\n                      title: titleAlert,\r\n                      html: textAlert,\r\n                      showCancelButton: true,\r\n                      confirmButtonColor: '#d33',\r\n                      cancelButtonColor: '#3085d6',\r\n                      cancelButtonText: 'Ok',\r\n                      confirmButtonText: 'Eliminar!'\r\n                    }).then(function () {\r\n\r\n                      //if(prog_schedule)\r\n                        deleteSchedule(event._id, event);\r\n                      // else\r\n                      //   deleteAppointment(event._id, event);\r\n\r\n                      swal(\r\n                        'Evento eliminado!',\r\n                        'Tu evento ha sido eliminado del calendario.',\r\n                        'success'\r\n                      )\r\n\r\n                    },function (dismiss) {});\r\n\r\n                   \r\n                  \r\n                   \r\n                });\r\n\r\n              \r\n            }\r\n            \r\n\r\n        },\r\n      \r\n        dayClick: function(date, jsEvent, view) {\r\n          \r\n              \r\n              if (view.name === \"month\") {\r\n                  \r\n                  calendar.fullCalendar('gotoDate', date);\r\n                 calendar.fullCalendar('changeView', 'agendaWeek');\r\n\r\n                  return false;\r\n              }\r\n\r\n              var currentDate = new Date();\r\n              \r\n          \r\n              if(date < currentDate || $(jsEvent.target).hasClass(\"fc-nonbusiness\")) {\r\n                  \r\n                  \r\n                    infoBox.addClass('alert-danger').html('Hora no permitida!. No puedes selecionar horas pasadas o fuera del horario de atención').show();\r\n                      setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').html('').hide();\r\n                        },3000);\r\n\r\n                  return false;\r\n              }\r\n\r\n            \r\n               if($(jsEvent.target).parent('div').hasClass(\"fc-bgevent\")) { //para prevenir que en eventos de fondo se agregue citas\r\n                  \r\n\r\n                 // return false;\r\n              }\r\n\r\n\r\n              if(prog_schedule){\r\n              \r\n           \r\n                datetimepicker1.data(\"DateTimePicker\").date(date);\r\n                datetimepicker2.data(\"DateTimePicker\").date(date.format(\"HH:mm \" ));\r\n                setupSchedule.modal({backdrop:'static', show:true });\r\n\r\n              }else{\r\n               \r\n                modalForm.modal({backdrop:'static', show:true });\r\n                modalForm.find('#modal-new-event').attr('data-modaldate', date.format());\r\n                modalForm.find('.modal-body').attr('data-modaldate', date.format());\r\n                modalForm.find('.modal-body').attr('data-date', date.format(\"dddd, MMMM Do YYYY\")).attr('data-hour', date.format(\"hh:mm a\" ));\r\n                modalForm.find('.modal-body').attr('data-office', $(jsEvent.target).data('office'));\r\n                modalForm.find('.modal-body').attr('data-officename', $(jsEvent.target).data('officename'));\r\n             \r\n\r\n                }\r\n\r\n              \r\n           \r\n          },\r\n          viewRender: function(view){\r\n              console.log(view.start.format() +' - '+view.end.format())\r\n            \r\n              calendar.fullCalendar( 'removeEventSources');\r\n            \r\n            \r\n\r\n                if(prog_schedule)\r\n                {\r\n                  $.ajax({\r\n                      type: 'GET',\r\n                      url: '/medic/schedules/list?date1='+view.start.format()+'&date2='+ view.end.format(),\r\n                      data: {},\r\n                      success: function (resp) {\r\n                         \r\n\r\n                          var schedules = [];\r\n\r\n                          $.each(resp, function( index, item ) {\r\n                             \r\n                              item.allDay = parseInt(item.allDay); // = false;\r\n                              \r\n                              /*if(item.patient_id == 0) item.rendering = 'background';*/\r\n                          \r\n                              schedules.push(item);\r\n                          });\r\n\r\n                         \r\n                          calendar.fullCalendar('addEventSource', schedules);\r\n                          //calendar.fullCalendar( 'updateEvents', schedules )\r\n                      },\r\n                      error: function (resp) {\r\n                          console.log('Error - '+ resp);\r\n\r\n                      }\r\n                  }); //ajax schedules\r\n\r\n              }else{\r\n                      $.ajax({\r\n                        type: 'GET',\r\n                        url: '/medic/appointments/list?calendar=1&date1='+view.start.format()+'&date2='+ view.end.format(),\r\n                        data: {},\r\n                        success: function (resp) {\r\n\r\n                            var appointments = [];\r\n\r\n                            $.each(resp, function( index, item ) {\r\n                               \r\n                                item.allDay = parseInt(item.allDay); // = false;\r\n                                \r\n                                if(item.patient_id == 0) item.rendering = 'background';\r\n\r\n                                appointments.push(item);\r\n                            });\r\n                           \r\n                           calendar.fullCalendar('addEventSource', appointments);\r\n                           //calendar.fullCalendar( 'updateEvents', appointments )\r\n                            \r\n                        },\r\n                        error: function (resp) {\r\n                            console.log('Error - '+ resp);\r\n\r\n                        }\r\n                    \r\n                    }); //ajax appoitnments\r\n\r\n                    $.ajax({\r\n                      type: 'GET',\r\n                      url: '/medic/schedules/list?date1='+view.start.format()+'&date2='+ view.end.format(),\r\n                      data: {},\r\n                      success: function (resp) {\r\n                         \r\n\r\n                          var schedulesForAppointmentPage = [];\r\n                          var ulSchedule = $('.schedule-list');\r\n                          var currentWeek = $('#currentWeek');\r\n                          currentWeek.html('<b>'+ view.start.format() +' | '+ view.end.format()+'</b>');\r\n\r\n                          ulSchedule.html('');\r\n                          var bh = [];\r\n                          $.each(resp, function( index, item ) {\r\n                             \r\n                              item.allDay = parseInt(item.allDay); // = false;\r\n                              \r\n                              item.rendering = 'background';\r\n                              item.schedule = 1;\r\n                              schedulesForAppointmentPage.push(item);\r\n                              var liSchedule = '<li><span class=\"label label-warning\">'+ moment(item.date).format('dddd') +' '+ moment(item.start).format('HH:mm') + '-' + moment(item.end).format('HH:mm') +'</span> '+ item.office.name+'</li>';\r\n\r\n                              ulSchedule.append(liSchedule)\r\n\r\n                              var working_hours = {\r\n                                // days of week. an array of zero-based day of week integers (0=Sunday)\r\n                                dow: [dayNumber(item.date)], // Monday - Thursday\r\n        \r\n                                start: item.start,//.split('T')[1], // a start time (10am in this example)\r\n                                end: item.end//.split('T')[1], // an end time (6pm in this example)\r\n                                \r\n                               }\r\n        \r\n                               bh.push(working_hours);\r\n\r\n                          });\r\n\r\n                         \r\n                          for (var i = bh.length - 1; i >= 0; i--) {\r\n                            \r\n                              if(moment(bh[i].start).isBetween(view.start, view.end))\r\n                              {\r\n                                bh[i].start = bh[i].start.split('T')[1];\r\n                                bh[i].end = bh[i].end.split('T')[1];\r\n                              }\r\n        \r\n                            }\r\n                            \r\n                            \r\n                            calendar.fullCalendar('option', 'businessHours', bh);\r\n                            calendar.fullCalendar('addEventSource',schedulesForAppointmentPage);\r\n                         \r\n                         \r\n                        console.log(schedulesForAppointmentPage)\r\n\r\n                      },\r\n                      error: function (resp) {\r\n                          console.log('Error - '+ resp);\r\n\r\n                      }\r\n                  }); //ajax schedules\r\n                  \r\n\r\n              } //else\r\n\r\n\r\n\r\n         \r\n            \r\n\r\n           \r\n            \r\n          } //view render\r\n        \r\n      });\r\n\r\n    } // init calendar\r\n\r\n    function crud(method, url, data, revertFunc) {\r\n       $('body').addClass('loading');\r\n      $.ajax({\r\n            type: method || 'POST',\r\n            url: url,\r\n            data: data,\r\n            success: function (resp) {\r\n               $('body').removeClass('loading');\r\n              if(method == \"POST\")\r\n              {\r\n                \r\n                calendar.fullCalendar( 'removeEvents', data.idRemove)\r\n                \r\n                if(resp){\r\n\r\n                      \r\n                      resp.allDay = parseInt(resp.allDay);\r\n\r\n                      if(resp.allDay)\r\n                      {\r\n                        if(prog_schedule)\r\n                          deleteSchedule(resp.id);\r\n                        else\r\n                          deleteAppointment(resp.id);\r\n                      \r\n                      }else{\r\n                          \r\n                          calendar.fullCalendar('renderEvent', resp, true);\r\n\r\n                        }\r\n                }else{\r\n                  infoBox.addClass('alert-danger').html('No se pudo crear la consulta!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n                   return\r\n                }\r\n\r\n              }\r\n               if(method == \"DELETE\")\r\n               {\r\n                 if(resp)\r\n                 {\r\n                  infoBox.addClass('alert-danger').html('No se puede eliminar consulta ya que se encuentra iniciada!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n                   return resp;\r\n                  }\r\n\r\n                  calendar.fullCalendar('removeEvents',data.idRemove);\r\n              \r\n               }\r\n               \r\n               if(method == \"PUT\")\r\n               {\r\n                 if(resp == '')\r\n                 {\r\n                  infoBox.addClass('alert-danger').html('No se puede cambiar de dia la consulta ya que se encuentra iniciada!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n\r\n                    revertFunc();\r\n                    \r\n                   return\r\n                  }\r\n                   \r\n                   calendar.fullCalendar( 'removeEvents', data.id)\r\n                   \r\n                    resp.allDay = parseInt(resp.allDay);\r\n                   \r\n\r\n                   calendar.fullCalendar('renderEvent', resp, true);\r\n                  \r\n                  \r\n               }\r\n                \r\n            },\r\n            error: function () {\r\n               $('body').removeClass('loading');\r\n              console.log('error saving appointment');\r\n\r\n            }\r\n        });\r\n    }// CRUD\r\n\r\n    function saveSchedule(event, idRemove)\r\n    {\r\n      \r\n      var schedule = {\r\n        title : event.title,\r\n        date : event.start.format(\"YYYY-MM-DD\"),\r\n        start : event.start.stripZone().format(),\r\n        end : (event.end) ? event.end.stripZone().format() : event.start.add(eventDurationNumber, eventDurationMinHours).stripZone().format(),\r\n        backgroundColor: event.backgroundColor, //Success (green)\r\n        borderColor: event.borderColor,\r\n        office_id: (event.office_id) ? event.office_id : 0,\r\n        idRemove: idRemove,\r\n        office_info: (event.office_info) ? event.office_info : '',\r\n        allDay: 0\r\n        \r\n      };\r\n     \r\n      if(isOverlapping(schedule)){\r\n        schedule.allDay = 1;\r\n      }\r\n\r\n      crud('POST', '/medic/schedules', schedule)\r\n\r\n    }\r\n\r\n    function updateSchedule(event, revertFunc)\r\n    {\r\n      \r\n      var schedule = {\r\n        //title : event.title,\r\n        date : event.start.format(\"YYYY-MM-DD\"),\r\n        start : event.start.stripZone().format(),\r\n        end : (event.end) ? event.end.stripZone().format() : event.start.add(eventDurationNumber, eventDurationMinHours).stripZone().format(),\r\n        office_id: event.office_id,\r\n        id: event.id,\r\n        office_info: event.office_info,\r\n        allDay: event.allDay\r\n      };\r\n      \r\n      crud('PUT', '/medic/schedules/'+schedule.id, schedule, revertFunc)\r\n\r\n    }\r\n\r\n     function deleteSchedule(id)\r\n    {\r\n\r\n      crud('DELETE', '/medic/schedules/'+ id + '/delete', {idRemove:id})\r\n     \r\n    }\r\n\r\n     function saveAppointment(event, idRemove)\r\n    {\r\n      \r\n      var appointment = {\r\n        title : event.title,\r\n        date : event.start.format(\"YYYY-MM-DD\"),\r\n        start : event.start.stripZone().format(),\r\n        end : (event.end) ? event.end.stripZone().format() : event.start.add(eventDurationNumber, eventDurationMinHours).stripZone().format(),\r\n        backgroundColor: event.backgroundColor, //Success (green)\r\n        borderColor: event.borderColor,\r\n        office_id: event.office_id,\r\n        patient_id: (event.patient_id) ? event.patient_id : 0,\r\n        idRemove: idRemove,\r\n        office_info: (event.office_info) ? event.office_info : '',\r\n        allDay: 0\r\n        \r\n      };\r\n    \r\n      if(isOverlapping(appointment)){\r\n        appointment.allDay = 1;\r\n      }\r\n\r\n      crud('POST', '/medic/appointments', appointment)\r\n\r\n    }\r\n\r\n    \r\n\r\n     function updateAppointment(event, revertFunc)\r\n    {\r\n      \r\n      var appointment = {\r\n  \r\n        date : event.start.format(\"YYYY-MM-DD\"),\r\n        start : event.start.stripZone().format(),\r\n        end : (event.end) ? event.end.stripZone().format() : event.start.add(eventDurationNumber, eventDurationMinHours).stripZone().format(),\r\n        patient_id: event.patient_id,\r\n        id: event.id,\r\n        office_info: event.office_info,\r\n        allDay: event.allDay\r\n      };\r\n      \r\n      crud('PUT', '/medic/appointments/'+appointment.id, appointment, revertFunc)\r\n\r\n    }\r\n\r\n    function deleteAppointment(id)\r\n    {\r\n\r\n      crud('DELETE', '/medic/appointments/'+ id + '/delete', {idRemove:id})\r\n     \r\n    }\r\n\r\n    function createEvent()\r\n    {\r\n        var val = $(\"#new-event\").val();\r\n        var valSelect = boxCreateAppointment.find('.widget-user-2').attr('data-patient');\r\n        var office_id = boxCreateAppointment.find('.widget-user-2').attr('data-office');\r\n        var valName = boxCreateAppointment.find('.widget-user-2').attr('data-title');\r\n        \r\n        if (valSelect.length == 0 || !office_id) {\r\n          return;\r\n        }\r\n       \r\n\r\n        //Create events\r\n        var event = $(\"<div />\");\r\n        event.css({\"background-color\": currColor, \"border-color\": currColor, \"color\": \"#fff\"}).addClass(\"external-event\");\r\n        event.attr('data-patient', valSelect);\r\n        event.attr('data-office', office_id);\r\n       \r\n        event.html('');\r\n        event.html(val + ' - '+ valName);\r\n        $('#external-events').prepend(event);\r\n\r\n        //Add draggable funtionality\r\n        ini_events(event);\r\n\r\n        //Remove event from text input\r\n        $(\"#new-event\").val(\"\");\r\n        searchPatients.val(\"\").trigger('change');\r\n        searchPatients.text(\"\").trigger('change');\r\n    } // create event\r\n\r\n    searchPatients.select2({\r\n            placeholder: \"Buscar paciente\",\r\n            ajax: {\r\n              url: \"/medic/patients/list\",\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params) {\r\n                return {\r\n                  q: params.term // search term\r\n                  \r\n                };\r\n              },\r\n              processResults: function (data) {\r\n               \r\n               // console.log(data.data);\r\n               searchPatients.empty();\r\n                var items = []\r\n                \r\n                $.each(data.data, function (index, value) {\r\n                    item = {\r\n                      id: value.id,\r\n                      text: value.first_name\r\n                    }\r\n                    items.push(item);\r\n                })\r\n              \r\n                    \r\n                return {\r\n                  results: items,\r\n                  \r\n                };\r\n              }\r\n\r\n            \r\n             \r\n            }\r\n     });\r\n    //searcn patient\r\n\r\n    modalForm.on('shown.bs.modal', function (event) {\r\n     \r\n      var date = $(this).find('.modal-body').attr('data-date') \r\n      var hour = $(this).find('.modal-body').attr('data-hour')\r\n      var officename = $(this).find('.modal-body').attr('data-officename')\r\n     \r\n  \r\n      var modal = $(this)\r\n      modal.find('.modal-title').html('Crear cita para el  <span class=\"label bg-yellow\">' + date + '</span> a las <span class=\"label bg-yellow\">'+ hour + '</span> en <span class=\"label bg-yellow\">'+ officename + '</span>' )\r\n   \r\n    });\r\n\r\n    function createEventFromModal()\r\n    {\r\n      \r\n      var val = modalForm.find(\"#modal-new-event\").val();\r\n      var valSelect = modalForm.find(\".modal-body\").find('.widget-user-2').attr('data-patient');//val();\r\n      var valName = modalForm.find(\".modal-body\").find('.widget-user-2').attr('data-title');\r\n      var office_id = modalForm.find(\".modal-body\").find('.widget-user-2').attr('data-office');\r\n      var date = $.fullCalendar.moment(modalForm.find('#modal-new-event').attr('data-modaldate'));\r\n      var end = (modalForm.find('#modal-new-event').attr('data-modaldate-end')) ? $.fullCalendar.moment(modalForm.find('#modal-new-event').attr('data-modaldate-end')) : '';\r\n      if(!office_id)\r\n      {\r\n        office_id = modalForm.find(\".modal-body\").attr('data-office');\r\n      }\r\n      if (valSelect.length == 0 || !office_id) {\r\n        return;\r\n      }\r\n     \r\n\r\n      //Create events\r\n\r\n      var eventObject = {\r\n          title: $.trim(val + ' - '+ valName), // use the element's text as the event title\r\n          patient_id: valSelect,\r\n          office_id: office_id\r\n               \r\n        };\r\n\r\n       var originalEventObject = eventObject;//event.data('eventObject');\r\n        \r\n        // we need to copy it, so that multiple events don't have a reference to the same object\r\n        var copiedEventObject = $.extend({}, originalEventObject);\r\n        \r\n        \r\n        // assign it the date that was reported\r\n        copiedEventObject.start = date;\r\n        \r\n        if(end)\r\n          copiedEventObject.end = end;\r\n\r\n        if( date.isValid())\r\n        {\r\n         \r\n        \r\n        copiedEventObject.allDay = false;//allDay;\r\n        copiedEventObject.backgroundColor = currColor; //event.css(\"background-color\");\r\n        copiedEventObject.borderColor = currColor;//event.css(\"border-color\");\r\n        copiedEventObject.overlap = false;\r\n      \r\n\r\n        var _id = calendar.fullCalendar('renderEvent', copiedEventObject, true)[0]._id; // get _id from event in the calendar (this is for if user will remove the event)\r\n       \r\n       \r\n        saveAppointment(copiedEventObject, _id);\r\n      }\r\n      //Remove event from text input\r\n      modalForm.find(\"#modal-new-event\").val(\"\");\r\n      modalForm.find('#modal-new-event').attr('data-modaldate', '');\r\n      modalForm.modal('hide');\r\n      /*modalForm.find('#search-offices').val([]);\r\n      modalForm.find('#search-offices').text('');\r\n      modalForm.find('.modal-search-patients').val([]);\r\n      modalForm.find('.modal-search-patients').text('');*/\r\n     \r\n    } //create form modal\r\n\r\n\r\n    searchModalPatients.select2({\r\n            placeholder: \"Buscar paciente\",\r\n            ajax: {\r\n              url: \"/medic/patients/list\",\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params) {\r\n                return {\r\n                  q: params.term // search term\r\n                  \r\n                };\r\n              },\r\n              processResults: function (data) {\r\n               searchModalPatients.empty();\r\n               // console.log(data.data);\r\n                var items = []\r\n                \r\n                $.each(data.data, function (index, value) {\r\n                    item = {\r\n                      id: value.id,\r\n                      text: value.first_name\r\n                    }\r\n                    items.push(item);\r\n                })\r\n              \r\n                    \r\n                return {\r\n                  results: items,\r\n                  \r\n                };\r\n              }\r\n\r\n            \r\n             \r\n            }\r\n     }); //search modal patient\r\n\r\n\r\n    searchOffices.select2({\r\n            placeholder: \"Buscar Consultorios o Clínicas privadas\",\r\n           \r\n            ajax: {\r\n              url: \"/medic/account/offices/list\",\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params) {\r\n                return {\r\n                  q: params.term // search term\r\n                  \r\n                };\r\n              },\r\n              processResults: function (data) {\r\n               \r\n                \r\n               searchOffices.empty();\r\n                var items = []\r\n                \r\n                $.each(data, function (index, value) {\r\n\r\n                    item = {\r\n                      id: value.id,\r\n                      text: value.name,\r\n                      office_info: JSON.stringify(value)\r\n                     \r\n                    }\r\n                    items.push(item);\r\n                })\r\n\r\n              \r\n                return {\r\n                  results: items,\r\n                  \r\n                };\r\n              }\r\n             \r\n            },\r\n            templateSelection: function(container) {\r\n                  $(container.element).attr(\"data-office\", container.office_info);\r\n                  \r\n                  return container.text;\r\n              }\r\n     });\r\n\r\n     setupSchedule.find('.add-cita').on('click', function (e) {\r\n      e.preventDefault();\r\n       \r\n        var title = setupSchedule.find('#search-offices').text();\r\n        var office_id = setupSchedule.find('#search-offices').val();\r\n        var date = setupSchedule.find('input[name=\"date\"]').val();\r\n        var ini = setupSchedule.find('input[name=\"start\"]').val();\r\n        var fin = setupSchedule.find('input[name=\"end\"]').val();\r\n       \r\n        var dataSelect = (title) ? setupSchedule.find('#search-offices').select2(\"data\") : '';\r\n        \r\n        var office_info = (dataSelect) ? ((dataSelect[0].office_info) ? dataSelect[0].office_info : '') : '';\r\n        var start = date + 'T'+ ini + ':00';\r\n        var end = date + 'T'+ ((fin) ? fin : ini) + ':00';\r\n        \r\n       if(!title)\r\n       {\r\n       \r\n         setupSchedule.find('#search-offices').select2('focus');\r\n         setupSchedule.find('#search-offices').select2('open');\r\n\r\n         infoBox.addClass('alert-danger').html('Escribe un consultorio o evento. Por favor revisar!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n          return false;\r\n       }\r\n\r\n        if(!date || !ini )\r\n        {\r\n          infoBox.addClass('alert-danger').html('Fecha invalida. Por favor revisar!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n             return false;\r\n        }\r\n       \r\n        if(moment(start).isAfter(end))\r\n        {\r\n           infoBox.addClass('alert-danger').html('Fecha invalida. La hora de inicio no puede ser mayor que la hora final!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').hide();\r\n                        },3000);\r\n\r\n             return false;\r\n        }\r\n\r\n        if(moment(start).isSame(end))\r\n        {\r\n          end = moment(start).add(eventDurationNumber, eventDurationMinHours).stripZone().format();\r\n        }\r\n\r\n        var colors = ['#2A630F','#558D00','#77B000','#8CCC00','#A9D300']\r\n        var currColor = colors[Math.floor((Math.random()*colors.length))];\r\n       \r\n        var schedule = {\r\n          title : title,\r\n          date :  date,\r\n          start : start,\r\n          end : end,\r\n          backgroundColor: currColor, //Success ('#00a65a')\r\n          borderColor: currColor,\r\n          office_id:  office_id,\r\n          office_info: office_info,\r\n          allDay: 0\r\n          \r\n        };\r\n     \r\n      if(isOverlapping(schedule)){\r\n         infoBox.addClass('alert-danger').html('No se puede agregar el evento por que hay colision de horarios. Por favor revisar!!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-danger').hide();\r\n                        },3000);\r\n        return false;\r\n      }\r\n\r\n      $.ajax({\r\n            type: 'POST',\r\n            url: '/medic/schedules',\r\n            data: schedule,\r\n            success: function (resp) {\r\n\r\n                  resp.allDay = parseInt(resp.allDay);\r\n                  \r\n                  calendar.fullCalendar('renderEvent', resp, true);\r\n             \r\n                  infoBox.addClass('alert-success').html('Horario Agregado Correctamente!!').show();\r\n                        setTimeout(function()\r\n                        { \r\n                          infoBox.removeClass('alert-success').hide();\r\n                        },3000);\r\n\r\n                  setupSchedule.find('#search-offices').val([]);\r\n                  setupSchedule.find('#search-offices').text('');\r\n                  datetimepicker1.data(\"DateTimePicker\").clear();\r\n                  datetimepicker2.data(\"DateTimePicker\").clear();\r\n                  datetimepicker3.data(\"DateTimePicker\").clear();\r\n                \r\n              \r\n                \r\n            },\r\n            error: function () {\r\n              console.log('error saving schedule');\r\n\r\n            }\r\n        });\r\n\r\n\r\n    });\r\n\r\n\r\n   $(\"#new-event\").keypress(function( e ) {\r\n        if(e.which == 13) {\r\n            createEvent();\r\n        }\r\n    });\r\n\r\n    $(\"#add-new-event\").click(function (e) {\r\n      e.preventDefault();\r\n      \r\n      createEvent();\r\n      \r\n    });\r\n\r\n    $(\".btn-finalizar-cita\").click(function (e) {\r\n        e.preventDefault();\r\n\r\n        createEventFromModal();\r\n        \r\n    });\r\n\r\n\r\n   \r\n\r\n\r\n\r\n    \r\n});\r\n"]}